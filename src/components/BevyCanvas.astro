---
const { id, script_path, alt } = Astro.props;
---

<!-- Store the message prop as a data attribute. -->
<bevy-canvas load data-id={id} data-script_path={script_path}>
    <canvas
        id={id}
        width="366"
        height="206"
        tabindex="0"
        data-raw-handle="1"
        alt={alt}
    >
    </canvas>
</bevy-canvas>

<script>
    class BevyCanvas extends HTMLElement {
        constructor() {
            super();

            (async () => {
                const { default: init } = await import(
                    this.dataset.script_path
                );

                init().catch((error) => {
                    if (
                        !error.message.startsWith(
                            "Using exceptions for control flow, don't mind me. This isn't actually an error!",
                        )
                    ) {
                        throw error;
                    }
                });
            })();
        }
    }

    customElements.define("bevy-canvas", BevyCanvas);
</script>

<style>
    canvas {
        color: #ececec;
        color-scheme: dark;
        font-family: "Fira Sans", sans-serif;
        font-size: 0.875rem;
        --rem: 16;
        --header-height: 60px;
        --scroll-padding-top: calc(var(--header-height) + 16px);
        --container-padding: 8px;
        box-sizing: border-box;
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        outline: none;
        width: 100% !important;
        height: auto !important;
        border-radius: 10px;
        background: #2b2c2f;
        min-width: 180px;
        min-height: 120px;
        cursor: auto;
        aspect-ratio: 1.77778 / 1;
    }
</style>
